apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: "androidx.navigation.safeargs.kotlin"
apply plugin: 'dagger.hilt.android.plugin'

android {
    compileSdkVersion 29

    defaultConfig {
        applicationId "com.chrisa.covid19"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments << ['room.incremental': 'true']
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    testOptions {
        unitTests.includeAndroidResources = true
    }

    lintOptions {
        warningsAsErrors true
        checkDependencies true
        ignoreTestSources true
        lintConfig file("lint.xml")
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }

    compileOptions {
        // Flag to enable support for the new language APIs
        coreLibraryDesugaringEnabled true
        // Sets Java compatibility to Java 8
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

kapt {
    correctErrorTypes = true
}

dependencies {
    /* kotlin */
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:${versions.coroutines}"
    /* android */
    implementation "androidx.arch.core:core-runtime:${versions.archRuntime}"
    implementation "androidx.lifecycle:lifecycle-extensions:${versions.archLifecycleExtensions}"
    implementation "androidx.navigation:navigation-fragment-ktx:${versions.archNavigation}"
    implementation "androidx.navigation:navigation-ui-ktx:${versions.archNavigation}"
    implementation "androidx.constraintlayout:constraintlayout:${versions.constraintlayout}"
    implementation "androidx.appcompat:appcompat:${versions.appcompat}"
    implementation "androidx.core:core-ktx:${versions.ktx}"
    implementation "androidx.fragment:fragment-ktx:${versions.fragment}"
    implementation "androidx.recyclerview:recyclerview:${versions.recyclerview}"
    implementation "com.google.android.material:material:${versions.material}"
    implementation 'com.google.android.gms:play-services-maps:17.0.0'
    implementation 'androidx.viewpager2:viewpager2:1.0.0'

    implementation 'io.reactivex.rxjava3:rxjava:3.0.4'
    implementation 'io.reactivex.rxjava3:rxandroid:3.0.0'
    implementation 'com.jakewharton.rxbinding4:rxbinding:4.0.0'
    implementation 'com.jakewharton.rxbinding4:rxbinding-appcompat:4.0.0'
    implementation 'com.jakewharton.rxbinding4:rxbinding-core:4.0.0'

    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.0.9'
    implementation "com.github.akarnokd:kotlin-flow-extensions:0.0.5"

    /* room */
    implementation 'androidx.room:room-runtime:2.2.5'
    implementation 'androidx.room:room-ktx:2.2.5'
    kapt 'androidx.room:room-compiler:2.2.5'

    /* coil */
    implementation("io.coil-kt:coil:${versions.coil}")

    /* dagger */
    implementation "com.google.dagger:dagger:${versions.dagger}"
    kapt "com.google.dagger:dagger-compiler:${versions.dagger}"

    /* hilt */
    implementation "com.google.dagger:hilt-android:$hilt_version"
    implementation 'androidx.hilt:hilt-lifecycle-viewmodel:1.0.0-alpha01'
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"
    kapt 'androidx.hilt:hilt-compiler:1.0.0-alpha01'

    /* epoxy */
    implementation "com.airbnb.android:epoxy:${versions.epoxy}"
    kapt "com.airbnb.android:epoxy-processor:${versions.epoxy}"

    /* ok-http */
    implementation "com.squareup.okhttp3:logging-interceptor:${versions.okhttp}"
    implementation "com.squareup.retrofit2:retrofit:${versions.retrofit}"
    implementation "com.squareup.retrofit2:converter-moshi:${versions.retrofit}"

    /* moshi */
    implementation("com.squareup.moshi:moshi:${versions.moshi}")
    implementation("com.squareup.moshi:moshi-adapters:${versions.moshi}")
    kapt("com.squareup.moshi:moshi-kotlin-codegen:${versions.moshi}")

    implementation 'com.github.PhilJay:MPAndroidChart:v3.1.0'

    /* test */
    testImplementation "io.mockk:mockk:${versions.mockk}"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:${versions.coroutines}"
    testImplementation "androidx.arch.core:core-testing:2.1.0"

    testImplementation 'org.robolectric:robolectric:4.3'
    testImplementation 'androidx.test:core:1.3.0-rc01'
    testImplementation 'androidx.test.ext:junit:1.1.2-rc01'
    testImplementation 'androidx.test.ext:truth:1.3.0-rc01'
}
